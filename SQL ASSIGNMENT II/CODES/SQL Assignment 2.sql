use mavenmovies;

 -- Retrieve the total number of rentals made in the Sakila database.

-- solution 1 
select count(*) from rental;

 -- Find the average rental duration (in days) of movies rented from the Sakila database.
 
 -- solution 2
 select avg(rental_duration) from film;
 
 -- Display the first name and last name of customers in uppercase.
 -- solution 3
 select upper(first_name) as first_name , upper(last_name) as last_name from customer;
 
 -- Extract the month from the rental date and display it alongside the rental ID.
 -- solution 4
 select rental_id, month(rental_date) as rental_month from rental;
 
 -- Retrieve the count of rentals for each customer (display customer ID and the count of rentals).
 -- solution 5 
 select customer_id, count(rental_id) as count_of_rental from rental group by customer_id;
 
 -- Find the total revenue generated by each store.
 -- solution 6
 select store_id, sum(revenue) as total_revenue from store group by store_id;
 
 -- Display the title of the movie, customer s first name, and last name who rented it.
 -- solution 7
 SELECT 
    film.title AS Movie_Title,
    customer.first_name AS Customer_First_Name,
    customer.last_name AS Customer_Last_Name
FROM 
    rental
JOIN 
    inventory ON rental.inventory_id = inventory.inventory_id
JOIN 
    film ON inventory.film_id = film.film_id
JOIN 
    customer ON rental.customer_id = customer.customer_id;

-- Retrieve the names of all actors who have appeared in the film "Gone with the Wind."
-- solution 8
SELECT 
    actor.first_name AS Actor_First_Name,
    actor.last_name AS Actor_Last_Name
FROM 
    film
JOIN 
    film_actor ON film.film_id = film_actor.film_id
JOIN 
    actor ON film_actor.actor_id = actor.actor_id
WHERE 
    film.title = 'Gone with the Wind' ;
    
    -- Determine the total number of rentals for each category of movies.
    -- soulution 1 
    SELECT 
    c.category_id,
    c.name AS category_name,
    COUNT(r.rental_id) AS total_rentals
FROM 
    rental r
JOIN 
    inventory i ON r.inventory_id = i.inventory_id
JOIN 
    film f ON i.film_id = f.film_id
JOIN 
    film_category fc ON f.film_id = fc.film_id
JOIN 
    category c ON fc.category_id = c.category_id
GROUP BY 
    c.category_id, c.name
ORDER BY 
    total_rentals DESC;
    
-- Find the average rental rate of movies in each language.
-- solution 2
SELECT 
    l.name AS language,
    AVG(f.rental_rate) AS average_rental_rate
FROM 
    film f
JOIN 
    language l ON f.language_id = l.language_id
GROUP BY 
    l.name;
    
-- Retrieve the customer names along with the total amount they've spent on rentals.
-- solution 3
SELECT 
    c.first_name,
    c.last_name,
    SUM(p.amount) AS total_amount_spent
FROM 
    customer c
JOIN 
    rental r ON c.customer_id = r.customer_id
JOIN 
    payment p ON r.rental_id = p.rental_id
GROUP BY 
    c.customer_id,
    c.first_name,
    c.last_name;
    
-- List the titles of movies rented by each customer in a particular city (e.g., 'London').
-- solution 4
SELECT 
    c.first_name,
    c.last_name,
    f.title
FROM 
    customer c
JOIN 
    address a ON c.address_id = a.address_id
JOIN 
    city ci ON a.city_id = ci.city_id
JOIN 
    rental r ON c.customer_id = r.customer_id
JOIN 
    inventory i ON r.inventory_id = i.inventory_id
JOIN 
    film f ON i.film_id = f.film_id
WHERE 
    ci.city = 'London'
GROUP BY 
    c.first_name,
    c.last_name,
    f.title;
    
-- Display the top 5 rented movies along with the number of times they've been rented.
-- solution 5
SELECT 
    f.title,
    COUNT(r.rental_id) AS rental_count
FROM 
    film f
JOIN 
    inventory i ON f.film_id = i.film_id
JOIN 
    rental r ON i.inventory_id = r.inventory_id
GROUP BY 
    f.title
ORDER BY 
    rental_count DESC
LIMIT 5;
-- Determine the customers who have rented movies from both stores (store ID 1 and store ID 2).
-- solution 6
SELECT 
    c.customer_id,
    c.first_name,
    c.last_name
FROM 
    customer c
JOIN 
    rental r1 ON c.customer_id = r1.customer_id
JOIN 
    inventory i1 ON r1.inventory_id = i1.inventory_id
JOIN 
    rental r2 ON c.customer_id = r2.customer_id
JOIN 
    inventory i2 ON r2.inventory_id = i2.inventory_id
WHERE 
    i1.store_id = 1 
    AND i2.store_id = 2
GROUP BY 
    c.customer_id,
    c.first_name,
    c.last_name
HAVING 
    COUNT(DISTINCT i1.inventory_id) > 0
    AND COUNT(DISTINCT i2.inventory_id) > 0;






